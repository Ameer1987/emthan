
/********************************************************************\
   Page tree
\********************************************************************/
.sonata-tree {
    list-style: none;
    padding-left: 0;
    margin-left: 15px;
    margin-right: 15px;
    overflow: hidden;
    padding-bottom: 10px;
}
.sonata-tree ul {
    list-style: none;
    padding-left: 30px;
}
.sonata-tree__item {
    display: block;
    padding: 7px 15px 7px 7px;
    border: 1px solid #ddd;
    border-radius: 2px;
    position: relative;
    margin-bottom: 5px;
    margin-right: 10px;
    color: #444;
    background: #fff;
}
.sonata-tree__item .label {
    font-size: 12px;
    margin-top: 2px;
    border-radius: 2px;
}
.sonata-tree__item .label-warning {
    margin-right: 5px;
}
.sonata-tree__item .fa-caret-right {
    position: absolute;
    top: 10px;
    left: -20px;
    color: #3c8dbc;
}
.sonata-tree__item:hover {
    background: #eee;
    color: #000;
}
.sonata-tree__item__is-hybrid {
    margin-right: 5px;
}
.sonata-tree__item.is-active {
    border: 1px solid #3c8dbc;
}
.sonata-tree__item.is-active:after,
.sonata-tree__item.is-active:before {
    left: 100%;
    top: 50%;
    border: solid transparent;
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
}
.sonata-tree__item.is-active:after {
    border-color: rgba(255, 255, 255, 0);
    border-left-color: #fff;
    border-width: 8px;
    margin-top: -8px;
}
.sonata-tree__item.is-active:before {
    border-color: rgba(255, 255, 255, 0);
    border-left-color: #3c8dbc;
    border-width: 9px;
    margin-top: -9px;
}
.sonata-tree__item.is-active:hover:after {
    border-left-color: #eee;
}
.sonata-tree__item.is-toggled .fa-caret-right {
    -webkit-transform: rotate(90deg);
    -moz-transform: rotate(90deg);
    -o-transform: rotate(90deg);
    -ms-transform: rotate(90deg);
    transform: rotate(90deg);
}
.sonata-tree__item__edit {
    font-weight: bold;
}
.sonata-tree__item__edit:hover {
    text-decoration: underline;
}

/**
 * Toggleable tree
 */
.sonata-tree--toggleable li > ul {
    display: none;
}
.sonata-tree--toggleable .sonata-tree__item {
    margin-left: 20px;
}
.sonata-tree--toggleable .sonata-tree__item .fa-caret-right {
    cursor: pointer;
}
.sonata-tree--toggleable .sonata-tree__item:last-child .fa-caret-right {
    display: none;
}

.sonata-tree--toggleable .sonata-tree__item .fa-caret-right:after {
    content: '';
    position: absolute;
    top: -5px;
    bottom: -5px;
    left: -10px;
    right: -10px;
}

/**
 * Smaller tree
 */
.sonata-tree--small {
    margin-left: 0;
}

.sonata-tree--small .sonata-tree__item__edit {
    font-size: 12px;
}

.sonata-tree--small .sonata-tree__item {
    padding: 3px 15px 4px 5px;
}

.sonata-tree--small .sonata-tree__item .fa-caret-right {
    top: 7px;
}




// New tree style (other than sonata)
/*Now the CSS*/
* {margin: 0; padding: 0;}

.tree ul {
    padding-top: 20px; position: relative;

    transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
}

.tree li {
    float: left; text-align: center;
    list-style-type: none;
    position: relative;
    padding: 20px 5px 0 5px;

    transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
}

/*We will use ::before and ::after to draw the connectors*/

.tree li::before, .tree li::after{
    content: '';
    position: absolute; top: 0; right: 50%;
    border-top: 1px solid #ccc;
    width: 50%; height: 20px;
}
.tree li::after{
    right: auto; left: 50%;
    border-left: 1px solid #ccc;
}

/*We need to remove left-right connectors from elements without 
any siblings*/
.tree li:only-child::after, .tree li:only-child::before {
    display: none;
}

/*Remove space from the top of single children*/
.tree li:only-child{ padding-top: 0;}

/*Remove left connector from first child and 
right connector from last child*/
.tree li:first-child::before, .tree li:last-child::after{
    border: 0 none;
}
/*Adding back the vertical connector to the last nodes*/
.tree li:last-child::before{
    border-right: 1px solid #ccc;
    border-radius: 0 5px 0 0;
    -webkit-border-radius: 0 5px 0 0;
    -moz-border-radius: 0 5px 0 0;
}
.tree li:first-child::after{
    border-radius: 5px 0 0 0;
    -webkit-border-radius: 5px 0 0 0;
    -moz-border-radius: 5px 0 0 0;
}

/*Time to add downward connectors from parents*/
.tree ul ul::before{
    content: '';
    position: absolute; top: 0; left: 50%;
    border-left: 1px solid #ccc;
    width: 0; height: 20px;
}

.tree li a{
    border: 1px solid #ccc;
    padding: 5px 10px;
    text-decoration: none;
    color: #666;
    font-family: arial, verdana, tahoma;
    font-size: 11px;
    display: inline-block;

    border-radius: 5px;
    -webkit-border-radius: 5px;
    -moz-border-radius: 5px;

    transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
}

/*Time for some hover effects*/
/*We will apply the hover effect the the lineage of the element also*/
.tree li a:hover, .tree li a:hover+ul li a {
    background: #c8e4f8; color: #000; border: 1px solid #94a0b4;
}
/*Connector styles on hover*/
.tree li a:hover+ul li::after, 
.tree li a:hover+ul li::before, 
.tree li a:hover+ul::before, 
.tree li a:hover+ul ul::before{
    border-color:  #94a0b4;
}

/*Thats all. I hope you enjoyed it.
Thanks :)*/
